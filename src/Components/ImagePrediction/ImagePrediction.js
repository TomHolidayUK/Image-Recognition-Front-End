import React from 'react';
import { Chart as ChartJS, CategoryScale, LinearScale, BarElement, ArcElement, Tooltip, Legend} from "chart.js";
import { Bar } from "react-chartjs-2";
import './ImagePrediction.css';
  
ChartJS.register( ArcElement, CategoryScale, LinearScale, BarElement, Tooltip, Legend);

const ImagePrediction = ({ imagePrediction }) => {

    let percentageData = [];
    for (let i = 0; i < imagePrediction.i; i++) {
        percentageData[i] = ((imagePrediction.allValues[i])*100).toFixed(2);
    }

    const barData = {
        labels: imagePrediction.allPredictions,
        datasets: [
          {
            data: percentageData,
            backgroundColor: 'aqua',
            borderColor: 'black',
            borderWidth: 4,
          },
        ],
      }

      const barOptions = {
        plugins: {
            legend: {
              display: false,
            }
        },
        scales: {
            y: {
                beginAtZero: false,
                Min: 90,
                suggestedMax: 100,
                ticks: {
                    font: {
                        size: 15,
                    }
                },
                title: {
                    display: true,
                    text: 'Probability %',
                    font: {
                        size: 15,
                    }
                },
            },
            x: {
                ticks: {
                    font: {
                        size: 15,
                        weight: "bold"
                    }
                },
                title: {
                    display: true,
                    text: 'Ideas Generated by AI Model',
                    font: {
                        size: 15,
                    }
                  }
            }
        }
    };



    return (
        <div id="container1" className='f4 pa2'>
            {(imagePrediction) && 
            <div className=''>
                <p className='f3 b'>Image Prediction Results:</p>
                The model predicts with <b>{((imagePrediction.allValues[0])*100).toFixed(2)}% </b> 
                of accuracy that <b>"{imagePrediction.allPredictions[0]}"</b> is represented in the photo. 
                The model further predicts that  
                <b> "{imagePrediction.allPredictions[1]}"</b>, 
                <b> "{imagePrediction.allPredictions[2]}"</b>, 
                <b> "{imagePrediction.allPredictions[3]}"</b>, 
                <b> "{imagePrediction.allPredictions[4]}"</b>, 
                <b> "{imagePrediction.allPredictions[5]}"</b> are also are represented.
                <div id="container" className="bar-container">
                    <Bar className="bar" options={barOptions} data={barData}></Bar>
                </div>
                </div>}
        </div>
    );
}

export default ImagePrediction;